@c Part of the gnuclad texinfo manual


@node Usage
@chapter Usage

@section Formats

Supported input formats are: @strong{CSV} spreadsheets, @strong{directories}

Supported output formats are: @strong{CSV}, @strong{SVG} and @strong{CONF}

A sample CSV file is distributed together with gnuclad.
It can be openend with any spreadsheet program; the field separator is
comma (,) and the text delimiter is double quote ("). Please make sure you save
it that way.

The conf file can be edited with any text editor of your choice.

@section Syntax

@example
gnuclad INPUTFILE OUTPUT[FORMAT|FILE] [CONFIGFILE]

  example: gnuclad table.CSV SVG
  example: gnuclad Data.csv result.csv alternative.conf
@end example

@cindex Getting Started
@section Getting started

gnuclad is built with the GNU toolchain.
These tools are included in most GNU/Linux and BSD distributions and can
be obtained from the Xcode developer package on OSX.
On Windows, compilation works flawlessly with MinGW & MSYS.
Other build systems may work but have not been tested.

To compile gnuclad, open the gnuclad main folder in a terminal and type:
@example
  sh configure
  make
@end example

This will produce a 'gnuclad' binary in the 'src' folder.
Change to the 'example' folder and generate your first SVG image:
@example
  cd example
  ../src/gnuclad --help
  ../src/gnuclad example.csv svg example.conf
@end example

In order to install gnuclad on a POSIX conform system, change back to
the main directory and run the install routine:
@example
  cd ..
  make install
@end example

You should now be able to call gnuclad from any folder.
If you wish to uninstall gnuclad, simply open a terminal in that same
main folder and execute:
@example
  make uninstall
@end example
